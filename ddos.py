# -*- coding: utf-8 -*-
"""ddos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q301zjyqzfwF3eApwTJSsxwGAdZz0OOr
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

df = pd.read_csv('ddos.csv')

df.fillna(df.median(numeric_only=True), inplace=True)

df = pd.get_dummies(df, columns=['protocol'], drop_first=True)

numerical_cols = ['packet_rate', 'inter_arrival_time', 'packet_size',
                  'duration', 'src_port', 'dst_port', 'num_packets', 'num_bytes']
scaler = StandardScaler()
df[numerical_cols] = scaler.fit_transform(df[numerical_cols])

df.drop(columns=['src_ip', 'dst_ip'], inplace=True)

X = df.drop(columns=["label"])
y = df["label"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

y_pred = rf_model.predict(X_test)
print(f"Random Forest Accuracy: {accuracy_score(y_test, y_pred):.2f}")
print(classification_report(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues",
            xticklabels=["Benign", "Malicious"],
            yticklabels=["Benign", "Malicious"])
plt.title("Random Forest Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

importances = pd.DataFrame({
    'Feature': X_train.columns,
    'Importance': rf_model.feature_importances_
}).sort_values(by='Importance', ascending=False)

sns.barplot(data=importances, x='Importance', y='Feature', palette="viridis")
plt.title("Random Forest Feature Importance")
plt.show()

